'use strict';

var _ = require('lodash');

var Accountant = function(announcer, config){
  this.investments = {};
  this.profits = {};
  this.announcer = announcer;

  this.announcer.publish(this.publish());


  this.investmentsElement = config.investmentsElement;
  this.profitsElement = config.profitsElement;
  this.totalElement = config.totalElement;
};

Accountant.prototype.findNumber = function(category, id){
  return _.find(this[category], function(previous){
    return previous ? previous.id === id : undefined;
  }, this);
};

var moneyExchange = function(category){
  return function(data){
    var previousData = this.findNumber(category, data.id);
    if(previousData){
      previousData.number = data.number;
    }
    else{
      this[category][data.id] = data.number;
    }
    this.render();
  };
};

Accountant.prototype.invest = moneyExchange('investments');
Accountant.prototype.profit = moneyExchange('profits');

var sumNumbers = function(category){
  var values = _.values(this[category]);
  if(values.length){
    return _.values(this[category]).reduce(function(prev, curr){
      return prev + curr;
    });
  }
  else {
    return 0;
  }
};

Accountant.prototype.render = function(){
  var investmentsDigit = sumNumbers.call(this, 'investments');
  var profitsDigit = sumNumbers.call(this, 'profits');

  this.investmentsElement.textContent = investmentsDigit;
  this.profitsElement.textContent = profitsDigit;
  this.totalElement.textContent = profitsDigit - investmentsDigit;
};

Accountant.prototype.balance = function(){
  console.log('investments is ' + this.investments);
  console.log('profits is ' + this.profits);
};

Accountant.prototype.publish = function(){
  return {
    category: 'accountant',
    id: 'accountant',
    data: this
  };
};

module.exports = Accountant;
