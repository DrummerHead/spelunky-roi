'use strict';

var _ = require('lodash');

var Accountant = function(announcer, config){
  this.investments = [];
  this.profits = [];
  this.announcer = announcer;

  this.announcer.publish(this.publish());


  this.investmentsElement = config.investmentsElement;
  this.profitsElement = config.profitsElement;
  this.totalElement = config.totalElement;
};

Accountant.prototype.findNumber = function(category, id){
  return _.find(this[category], function(previous){
    return previous ? previous.id === id : undefined;
  }, this);
};

var moneyExchange = function(category){
  return function(data){
    var previousData = this.findNumber(category, data.id);
    if(previousData){
      previousData.number = data.number;
      previousData.amount += 1;
    }
    else{
      this[category].push(
        {
          id: data.id,
          number: data.number,
          amount: 1
        }
      );
    }
    this.render();
  };
};

Accountant.prototype.invest = moneyExchange('investments');
Accountant.prototype.profit = moneyExchange('profits');

var sumNumbers = function(category){
  if(this[category].length){
    return this[category].map(function(item){
      return item.number * item.amount;
    }).reduce(function(prev, curr){
      return prev + curr;
    });
  }
  else {
    return 0;
  }
};

Accountant.prototype.updatePrice = function(specs){
  var previousData = this.findNumber(specs.category, specs.id);
  if(previousData){
    previousData.number = specs.number;
  }
  this.render();
};

Accountant.prototype.render = function(){
  var investmentsDigit = sumNumbers.call(this, 'investments');
  var profitsDigit = sumNumbers.call(this, 'profits');

  this.investmentsElement.textContent = Math.round(investmentsDigit);
  this.profitsElement.textContent = Math.round(profitsDigit);
  this.totalElement.textContent = Math.round(profitsDigit - investmentsDigit);
};

/**
 * Returns object used by Announcer to subscribe and/or update objects
 *
 * @returns {module:announcer-class~publishData}
 */
Accountant.prototype.publish = function(){
  return {
    category: 'accountant',
    id: 'accountant',
    data: this
  };
};

module.exports = Accountant;
