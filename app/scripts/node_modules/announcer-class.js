'use strict';

var _ = require('lodash');

var Announcer = function(){
  this.data = {};
};

Announcer.prototype.findData = function(category, id){
  return _.find(this.data[category], function(previous){
    return previous.id === id;
  });
};

Announcer.prototype.publish = function(me){
  if(!this.data.hasOwnProperty(me.category)){
    this.data[me.category] = [];
  }

  var previousData = this.findData(me.category, me.id);

  if(previousData){
    _.assign(previousData, me);
  }
  else {
    this.data[me.category].push(me);
  }

  this.announcements(me);

};

Announcer.prototype.announcements = function(subject){
  var i, l;
  var area = this.findData('number', 'area') || {data: 1};
  var level = this.findData('number', 'level') || {data: 1};

  if(subject.category === 'number'){
    for(i = 0, l = this.data.consumable.length; i < l; i++){
      this.data.consumable[i].data.updatePrice(area.data, level.data);
    }
    if(subject.id === 'area'){
      for(i = 0, l = this.data.treasure.length; i < l; i++){
        this.data.treasure[i].data.updatePrice(area.data);
      }
    }
  }
};


module.exports = Announcer;
