'use strict';

/**
 * Exports NumberSelect constructor
 *
 * @module number-select-class
 */

/**
 * Generic number adder and remover
 *
 * @constructor
 * @param {object} specs
 * @param {string} specs.id
 * @param {number} specs.number
 * @param {object} announcer - [Announcer]{@link
 *   module:announcer-class~Announcer} instance, handles communication between
 *   objects
 */
var NumberSelect = function(specs, announcer){
  this.number = parseInt(specs.number, 10);
  this.id = specs.id;

  this.containerElement = document.createElement('div');
  this.containerElement.classList.add('number-select');

  this.addElement = document.createElement('span');
  this.addElement.classList.add('number-select-add');
  this.addElement.textContent = '+';

  this.numberElement = document.createElement('span');
  this.numberElement.classList.add('number-select-number');
  this.numberElement.textContent = this.number;

  this.subtractElement = document.createElement('span');
  this.subtractElement.classList.add('number-select-subtract');
  this.subtractElement.textContent = '-';

  this.containerElement.appendChild(this.addElement);
  this.containerElement.appendChild(this.numberElement);
  this.containerElement.appendChild(this.subtractElement);

  this.addElement.addEventListener('click', this.addOne.bind(this));
  this.subtractElement.addEventListener('click', this.subtractOne.bind(this));

  this.announcer = announcer;
  this.announcer.publish(this.publish());
};

/**
 * Increase number
 */
NumberSelect.prototype.addOne = function(){
  this.number += 1;
  this.update();
};

/**
 * Decrease number
 */
NumberSelect.prototype.subtractOne = function(){
  this.number -= 1;
  this.update();
};

/**
 * Number getter
 *
 * @returns {number} number
 */
NumberSelect.prototype.getNumber = function(){
  return this.number;
};

/**
 * Returns object used by Announcer to subscribe and/or update objects
 *
 * @returns {module:announcer-class~publishData}
 */
NumberSelect.prototype.publish = function(){
  return {
    category: 'number',
    id: this.id,
    data: this.getNumber()
  };
};

/**
 * Render number elements to the DOM
 *
 * @param {Element} targetElement - Element to which append
 */
NumberSelect.prototype.render = function(targetElement){
  targetElement.appendChild(this.containerElement);
};

/**
 * Update DOM with current number
 */
NumberSelect.prototype.update = function(){
  this.announcer.publish(this.publish());
  this.numberElement.textContent = this.number;
};


module.exports = NumberSelect;
